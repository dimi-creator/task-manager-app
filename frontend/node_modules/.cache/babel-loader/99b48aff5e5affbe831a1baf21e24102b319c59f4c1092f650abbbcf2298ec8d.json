{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\task-manager-app\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TaskList from '../components/Tasks/TaskList';\nimport TaskForm from '../components/Tasks/TaskForm';\nimport TaskFilter from '../components/Filters/TaskFilter';\nimport './Tasks.css';\nimport '../components/Pagination/Pagination.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // État pour la pagination\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    lastPage: 1,\n    perPage: 6,\n    total: 0\n  });\n\n  // État pour les filtres\n  const [filters, setFilters] = useState({\n    status: '',\n    category: ''\n  });\n  const API_URL = 'http://127.0.0.1:8000/api';\n  const fetchTasks = useCallback(async (page = 1, filters = {}) => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        window.location.href = '/login';\n        return;\n      }\n      const params = new URLSearchParams({\n        page,\n        per_page: 6,\n        // Utilisation d'une valeur fixe au lieu de pagination.perPage\n        ...filters\n      }).toString();\n      const response = await axios.get(`${API_URL}/tasks?${params}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status !== 200) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const {\n        data,\n        current_page,\n        last_page,\n        per_page,\n        total\n      } = response.data;\n\n      // Mise à jour en une seule opération pour éviter les rendus multiples\n      setTasks(data);\n      setFilteredTasks(data);\n      setPagination(prev => ({\n        ...prev,\n        currentPage: current_page,\n        lastPage: last_page,\n        perPage: per_page,\n        total: total\n      }));\n    } catch (err) {\n      var _err$response;\n      console.error('Erreur lors de la récupération des tâches:', err);\n      setError('Impossible de charger les tâches. Veuillez réessayer.');\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        window.location.href = '/login';\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [API_URL]); // On ne dépend plus de pagination.perPage\n\n  // Chargement initial des tâches et quand les filtres changent\n  useEffect(() => {\n    fetchTasks(1, filters);\n  }, [filters, fetchTasks]); // Ajout de fetchTasks aux dépendances\n\n  const handleAddOrUpdateTask = useCallback(async taskData => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        window.location.href = '/login';\n        return;\n      }\n      let response;\n      if (editingTask) {\n        // Mise à jour d'une tâche existante\n        response = await axios.put(`${API_URL}/tasks/${editingTask.id}`, taskData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.status === 200) {\n          // Recharger les données depuis le serveur pour s'assurer d'avoir les dernières mises à jour\n          await fetchTasks(pagination.currentPage, filters);\n          setEditingTask(null);\n          toast.success('Tâche mise à jour avec succès !');\n        }\n      } else {\n        // Création d'une nouvelle tâche\n        response = await axios.post(`${API_URL}/tasks`, taskData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.status === 201) {\n          // Recharger la première page pour voir la nouvelle tâche\n          await fetchTasks(1, filters);\n          toast.success('Tâche ajoutée avec succès !');\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'opération sur la tâche:', error);\n      toast.error(`Erreur lors de ${editingTask ? 'la mise à jour' : 'l\\'ajout'} de la tâche`);\n    }\n  }, [API_URL, editingTask, fetchTasks, filters, pagination.currentPage]);\n  const handleUpdateTask = useCallback(async updatedTask => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        window.location.href = '/login';\n        return;\n      }\n      const response = await axios.put(`${API_URL}/tasks/${updatedTask.id}`, updatedTask, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        // Recharger les données depuis le serveur\n        await fetchTasks(pagination.currentPage, filters);\n        setEditingTask(null);\n        toast.success('Tâche mise à jour avec succès !');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour de la tâche:', error);\n      toast.error('Erreur lors de la mise à jour de la tâche');\n    }\n  }, [API_URL, fetchTasks, filters, pagination.currentPage]);\n\n  // Gestion du changement de page\n  const handlePageChange = useCallback(newPage => {\n    if (newPage >= 1 && newPage <= pagination.lastPage && newPage !== pagination.currentPage) {\n      fetchTasks(newPage, filters);\n    }\n  }, [fetchTasks, filters, pagination.currentPage, pagination.lastPage]);\n\n  // Gestion des filtres\n  const handleFilterChange = useCallback((statusFilter, categoryFilter) => {\n    const newFilters = {\n      status: statusFilter || '',\n      category: categoryFilter || ''\n    };\n\n    // Mettre à jour l'état des filtres\n    setFilters(prevFilters => {\n      // Vérifier si les filtres ont réellement changé\n      if (prevFilters.status === newFilters.status && prevFilters.category === newFilters.category) {\n        return prevFilters;\n      }\n      return newFilters;\n    });\n\n    // Réinitialiser à la première page avec les nouveaux filtres\n    fetchTasks(1, newFilters);\n  }, [fetchTasks]);\n  const handleDeleteTask = useCallback(async taskId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        window.location.href = '/login';\n        return;\n      }\n      const response = await axios.delete(`${API_URL}/tasks/${taskId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        // Vérifier si nous devons revenir à la page précédente\n        const shouldGoToPrevPage = pagination.total % pagination.perPage === 1 && pagination.currentPage > 1;\n        const newPage = shouldGoToPrevPage ? Math.max(1, pagination.currentPage - 1) : pagination.currentPage;\n\n        // Recharger les données depuis le serveur\n        await fetchTasks(newPage, filters);\n        toast.success('Tâche supprimée avec succès !');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la tâche:', error);\n      toast.error('Erreur lors de la suppression de la tâche');\n    }\n  }, [API_URL, fetchTasks, filters, pagination.currentPage, pagination.perPage, pagination.total]);\n\n  // Supprimer handleFilterTasks car nous utilisons maintenant le filtrage côté serveur\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"tasks-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gestionnaire de T\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"G\\xE9rez efficacement vos t\\xE2ches quotidiennes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingTask ? 'Modifier la tâche' : 'Ajouter une tâche'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          task: editingTask,\n          onTaskSubmit: handleAddOrUpdateTask,\n          onCancel: () => setEditingTask(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Filtrer les t\\xE2ches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n            tasks: tasks,\n            onFilterChange: handleFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Mes T\\xE2ches (\", pagination.total, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list-wrapper\",\n          children: [loading && filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-state\",\n            children: \"Chargement des t\\xE2ches...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this) : filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-tasks\",\n            children: \"Aucune t\\xE2che \\xE0 afficher. Commencez par en ajouter une !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: filteredTasks,\n            onTaskUpdate: handleUpdateTask,\n            onTaskDelete: handleDeleteTask,\n            loading: loading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), !loading && pagination.total > 0 && /*#__PURE__*/_jsxDEV(\"nav\", {\n            \"aria-label\": \"Pagination\",\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pagination justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: `page-item ${pagination.currentPage === 1 ? 'disabled' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"page-link\",\n                  onClick: () => handlePageChange(pagination.currentPage - 1),\n                  disabled: pagination.currentPage === 1,\n                  children: \"\\xAB Pr\\xE9c\\xE9dent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this), Array.from({\n                length: Math.min(5, pagination.lastPage)\n              }, (_, i) => {\n                // Afficher les numéros de page autour de la page actuelle\n                let pageNum;\n                if (pagination.lastPage <= 5) {\n                  pageNum = i + 1;\n                } else if (pagination.currentPage <= 3) {\n                  pageNum = i + 1;\n                } else if (pagination.currentPage >= pagination.lastPage - 2) {\n                  pageNum = pagination.lastPage - 4 + i;\n                } else {\n                  pageNum = pagination.currentPage - 2 + i;\n                }\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `page-item ${pagination.currentPage === pageNum ? 'active' : ''}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"page-link\",\n                    onClick: () => handlePageChange(pageNum),\n                    children: pageNum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 49\n                  }, this)\n                }, pageNum, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 45\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `page-item ${pagination.currentPage === pagination.lastPage ? 'disabled' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"page-link\",\n                  onClick: () => handlePageChange(pagination.currentPage + 1),\n                  disabled: pagination.currentPage === pagination.lastPage,\n                  children: \"Suivant \\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination-info\",\n              children: [\"Page \", pagination.currentPage, \" sur \", pagination.lastPage, \" \\u2022\", pagination.total, \" t\\xE2che\", pagination.total > 1 ? 's' : '', \" au total\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"O3I5uw3I4o1Lo5VLwid0qty8HVM=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","toast","TaskList","TaskForm","TaskFilter","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","filteredTasks","setFilteredTasks","editingTask","setEditingTask","loading","setLoading","error","setError","pagination","setPagination","currentPage","lastPage","perPage","total","filters","setFilters","status","category","API_URL","fetchTasks","page","token","localStorage","getItem","window","location","href","params","URLSearchParams","per_page","toString","response","get","headers","Error","data","current_page","last_page","prev","err","_err$response","console","handleAddOrUpdateTask","taskData","put","id","success","post","handleUpdateTask","updatedTask","handlePageChange","newPage","handleFilterChange","statusFilter","categoryFilter","newFilters","prevFilters","handleDeleteTask","taskId","delete","shouldGoToPrevPage","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","className","task","onTaskSubmit","onCancel","style","marginTop","onFilterChange","length","onTaskUpdate","onTaskDelete","onClick","disabled","Array","from","min","_","i","pageNum","_c","$RefreshReg$"],"sources":["C:/MAMP/htdocs/task-manager-app/frontend/src/pages/Tasks.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TaskList from '../components/Tasks/TaskList';\nimport TaskForm from '../components/Tasks/TaskForm';\nimport TaskFilter from '../components/Filters/TaskFilter';\nimport './Tasks.css';\nimport '../components/Pagination/Pagination.css';\n\nconst Tasks = () => {\n    const [tasks, setTasks] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const [editingTask, setEditingTask] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    \n    // État pour la pagination\n    const [pagination, setPagination] = useState({\n        currentPage: 1,\n        lastPage: 1,\n        perPage: 6,\n        total: 0\n    });\n    \n    // État pour les filtres\n    const [filters, setFilters] = useState({\n        status: '',\n        category: ''\n    });\n\n    const API_URL = 'http://127.0.0.1:8000/api';\n\n    const fetchTasks = useCallback(async (page = 1, filters = {}) => {\n        try {\n            setLoading(true);\n            const token = localStorage.getItem('token');\n            if (!token) {\n                window.location.href = '/login';\n                return;\n            }\n            \n            const params = new URLSearchParams({\n                page,\n                per_page: 6, // Utilisation d'une valeur fixe au lieu de pagination.perPage\n                ...filters\n            }).toString();\n            \n            const response = await axios.get(`${API_URL}/tasks?${params}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n            \n            if (response.status !== 200) {\n                throw new Error('Failed to fetch tasks');\n            }\n            \n            const { data, current_page, last_page, per_page, total } = response.data;\n            \n            // Mise à jour en une seule opération pour éviter les rendus multiples\n            setTasks(data);\n            setFilteredTasks(data);\n            setPagination(prev => ({\n                ...prev,\n                currentPage: current_page,\n                lastPage: last_page,\n                perPage: per_page,\n                total: total\n            }));\n        } catch (err) {\n            console.error('Erreur lors de la récupération des tâches:', err);\n            setError('Impossible de charger les tâches. Veuillez réessayer.');\n            if (err.response?.status === 401) {\n                window.location.href = '/login';\n            }\n        } finally {\n            setLoading(false);\n        }\n    }, [API_URL]); // On ne dépend plus de pagination.perPage\n\n    // Chargement initial des tâches et quand les filtres changent\n    useEffect(() => {\n        fetchTasks(1, filters);\n    }, [filters, fetchTasks]); // Ajout de fetchTasks aux dépendances\n\n    const handleAddOrUpdateTask = useCallback(async (taskData) => {\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                window.location.href = '/login';\n                return;\n            }\n            \n            let response;\n            \n            if (editingTask) {\n                // Mise à jour d'une tâche existante\n                response = await axios.put(`${API_URL}/tasks/${editingTask.id}`, taskData, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    }\n                });\n                \n                if (response.status === 200) {\n                    // Recharger les données depuis le serveur pour s'assurer d'avoir les dernières mises à jour\n                    await fetchTasks(pagination.currentPage, filters);\n                    setEditingTask(null);\n                    toast.success('Tâche mise à jour avec succès !');\n                }\n            } else {\n                // Création d'une nouvelle tâche\n                response = await axios.post(`${API_URL}/tasks`, taskData, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    }\n                });\n                \n                if (response.status === 201) {\n                    // Recharger la première page pour voir la nouvelle tâche\n                    await fetchTasks(1, filters);\n                    toast.success('Tâche ajoutée avec succès !');\n                }\n            }\n        } catch (error) {\n            console.error('Erreur lors de l\\'opération sur la tâche:', error);\n            toast.error(`Erreur lors de ${editingTask ? 'la mise à jour' : 'l\\'ajout'} de la tâche`);\n        }\n    }, [API_URL, editingTask, fetchTasks, filters, pagination.currentPage]);\n    \n    const handleUpdateTask = useCallback(async (updatedTask) => {\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                window.location.href = '/login';\n                return;\n            }\n            \n            const response = await axios.put(\n                `${API_URL}/tasks/${updatedTask.id}`, \n                updatedTask,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n\n            if (response.status === 200) {\n                // Recharger les données depuis le serveur\n                await fetchTasks(pagination.currentPage, filters);\n                setEditingTask(null);\n                toast.success('Tâche mise à jour avec succès !');\n            }\n        } catch (error) {\n            console.error('Erreur lors de la mise à jour de la tâche:', error);\n            toast.error('Erreur lors de la mise à jour de la tâche');\n        }\n    }, [API_URL, fetchTasks, filters, pagination.currentPage]);\n    \n    // Gestion du changement de page\n    const handlePageChange = useCallback((newPage) => {\n        if (newPage >= 1 && newPage <= pagination.lastPage && newPage !== pagination.currentPage) {\n            fetchTasks(newPage, filters);\n        }\n    }, [fetchTasks, filters, pagination.currentPage, pagination.lastPage]);\n    \n    // Gestion des filtres\n    const handleFilterChange = useCallback((statusFilter, categoryFilter) => {\n        const newFilters = {\n            status: statusFilter || '',\n            category: categoryFilter || ''\n        };\n        \n        // Mettre à jour l'état des filtres\n        setFilters(prevFilters => {\n            // Vérifier si les filtres ont réellement changé\n            if (prevFilters.status === newFilters.status && prevFilters.category === newFilters.category) {\n                return prevFilters;\n            }\n            return newFilters;\n        });\n        \n        // Réinitialiser à la première page avec les nouveaux filtres\n        fetchTasks(1, newFilters);\n    }, [fetchTasks]);\n\n    const handleDeleteTask = useCallback(async (taskId) => {\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                window.location.href = '/login';\n                return;\n            }\n            \n            const response = await axios.delete(`${API_URL}/tasks/${taskId}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (response.status === 200) {\n                // Vérifier si nous devons revenir à la page précédente\n                const shouldGoToPrevPage = pagination.total % pagination.perPage === 1 && \n                                        pagination.currentPage > 1;\n                \n                const newPage = shouldGoToPrevPage ? \n                    Math.max(1, pagination.currentPage - 1) : \n                    pagination.currentPage;\n                \n                // Recharger les données depuis le serveur\n                await fetchTasks(newPage, filters);\n                toast.success('Tâche supprimée avec succès !');\n            }\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la tâche:', error);\n            toast.error('Erreur lors de la suppression de la tâche');\n        }\n    }, [API_URL, fetchTasks, filters, pagination.currentPage, pagination.perPage, pagination.total]);\n\n    // Supprimer handleFilterTasks car nous utilisons maintenant le filtrage côté serveur\n\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div className=\"tasks-container\">\n            <header className=\"tasks-header\">\n                <h1>Gestionnaire de Tâches</h1>\n                <p>Gérez efficacement vos tâches quotidiennes</p>\n            </header>\n            \n            <div className=\"tasks-content\">\n                <div className=\"tasks-form-container\">\n                    <h2>{editingTask ? 'Modifier la tâche' : 'Ajouter une tâche'}</h2>\n                    <TaskForm \n                        task={editingTask}\n                        onTaskSubmit={handleAddOrUpdateTask}\n                        onCancel={() => setEditingTask(null)}\n                    />\n                    \n                    <div style={{ marginTop: '2rem' }}>\n                        <h3>Filtrer les tâches</h3>\n                        <TaskFilter \n                            tasks={tasks} \n                            onFilterChange={handleFilterChange} \n                        />\n                    </div>\n                </div>\n                \n                <div className=\"tasks-list-container\">\n                    <h2>Mes Tâches ({pagination.total})</h2>\n                    <div className=\"tasks-list-wrapper\">\n                        {loading && filteredTasks.length === 0 ? (\n                            <div className=\"loading-state\">Chargement des tâches...</div>\n                        ) : filteredTasks.length === 0 ? (\n                            <p className=\"no-tasks\">Aucune tâche à afficher. Commencez par en ajouter une !</p>\n                        ) : (\n                            <TaskList \n                                tasks={filteredTasks} \n                                onTaskUpdate={handleUpdateTask} \n                                onTaskDelete={handleDeleteTask}\n                                loading={loading}\n                                error={error}\n                            />\n                        )}\n                        \n                        {/* Pagination */}\n                        {!loading && pagination.total > 0 && (\n                            <nav aria-label=\"Pagination\" className=\"mt-4\">\n                                <ul className=\"pagination justify-content-center\">\n                                    <li className={`page-item ${pagination.currentPage === 1 ? 'disabled' : ''}`}>\n                                        <button \n                                            className=\"page-link\" \n                                            onClick={() => handlePageChange(pagination.currentPage - 1)}\n                                            disabled={pagination.currentPage === 1}\n                                        >\n                                            &laquo; Précédent\n                                        </button>\n                                    </li>\n                                    \n                                    {Array.from({ length: Math.min(5, pagination.lastPage) }, (_, i) => {\n                                        // Afficher les numéros de page autour de la page actuelle\n                                        let pageNum;\n                                        if (pagination.lastPage <= 5) {\n                                            pageNum = i + 1;\n                                        } else if (pagination.currentPage <= 3) {\n                                            pageNum = i + 1;\n                                        } else if (pagination.currentPage >= pagination.lastPage - 2) {\n                                            pageNum = pagination.lastPage - 4 + i;\n                                        } else {\n                                            pageNum = pagination.currentPage - 2 + i;\n                                        }\n                                        \n                                        return (\n                                            <li \n                                                key={pageNum} \n                                                className={`page-item ${pagination.currentPage === pageNum ? 'active' : ''}`}\n                                            >\n                                                <button \n                                                    className=\"page-link\" \n                                                    onClick={() => handlePageChange(pageNum)}\n                                                >\n                                                    {pageNum}\n                                                </button>\n                                            </li>\n                                        );\n                                    })}\n                                    \n                                    <li className={`page-item ${pagination.currentPage === pagination.lastPage ? 'disabled' : ''}`}>\n                                        <button \n                                            className=\"page-link\" \n                                            onClick={() => handlePageChange(pagination.currentPage + 1)}\n                                            disabled={pagination.currentPage === pagination.lastPage}\n                                        >\n                                            Suivant &raquo;\n                                        </button>\n                                    </li>\n                                </ul>\n                                <div className=\"pagination-info\">\n                                    Page {pagination.currentPage} sur {pagination.lastPage} • \n                                    {pagination.total} tâche{pagination.total > 1 ? 's' : ''} au total\n                                </div>\n                            </nav>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}