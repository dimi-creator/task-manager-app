{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\task-manager-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  // Vérifier l'état de connexion au chargement\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n        // Configurer l'en-tête d'authentification par défaut\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      } catch (error) {\n        console.error('Erreur lors du parsing des données utilisateur:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Configuration de base d'Axios\n  axios.defaults.baseURL = 'http://localhost:8000/api';\n  axios.defaults.headers.common['Accept'] = 'application/json';\n  axios.defaults.headers.common['Content-Type'] = 'application/json';\n  axios.defaults.withCredentials = true;\n\n  // Fonction de connexion\n  const login = useCallback(async credentials => {\n    try {\n      console.log('Tentative de connexion avec les identifiants :', credentials);\n      const response = await axios.post('/login', {\n        email: credentials.email,\n        password: credentials.password,\n        device_name: 'browser'\n      });\n      console.log('Réponse du serveur:', response.data);\n      if (response.data && response.data.token && response.data.user) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Stocker le token et les données utilisateur\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // Configurer l'en-tête d'authentification par défaut\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Mettre à jour l'état utilisateur\n        setUser(user);\n\n        // Afficher le message de succès\n        toast.success('Connexion réussie !');\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error('Réponse du serveur invalide');\n      }\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      throw error;\n    }\n  }, []);\n\n  // Fonction de déconnexion\n  const logout = useCallback(() => {\n    // Supprimer les données d'authentification\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.info('Vous avez été déconnecté avec succès');\n\n    // Rediriger vers la page de connexion\n    history.push('/login');\n  }, [history]);\n\n  // Fonction d'inscription\n  const register = useCallback(async userData => {\n    try {\n      const response = await axios.post('/register', {\n        ...userData,\n        password_confirmation: userData.password\n      });\n      toast.success('Inscription réussie ! Veuillez vous connecter.');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erreur lors de l\\'inscription:', error);\n      throw error;\n    }\n  }, []);\n\n  // Vérifier si l'utilisateur est authentifié\n  const isAuthenticated = !!user;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      isAuthenticated,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"8di1RvVO9OMJYUpZq8Z48NhIhRY=\", false, function () {\n  return [useHistory];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useContext","axios","useHistory","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","history","token","localStorage","getItem","userData","JSON","parse","defaults","headers","common","error","console","removeItem","baseURL","withCredentials","login","credentials","log","response","post","email","password","device_name","data","setItem","stringify","success","Error","logout","info","push","register","password_confirmation","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/MAMP/htdocs/task-manager-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const history = useHistory();\n\n    // Vérifier l'état de connexion au chargement\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        const userData = localStorage.getItem('user');\n        \n        if (token && userData) {\n            try {\n                setUser(JSON.parse(userData));\n                // Configurer l'en-tête d'authentification par défaut\n                axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            } catch (error) {\n                console.error('Erreur lors du parsing des données utilisateur:', error);\n                localStorage.removeItem('token');\n                localStorage.removeItem('user');\n            }\n        }\n        \n        setLoading(false);\n    }, []);\n\n    // Configuration de base d'Axios\n    axios.defaults.baseURL = 'http://localhost:8000/api';\n    axios.defaults.headers.common['Accept'] = 'application/json';\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n    axios.defaults.withCredentials = true;\n\n    // Fonction de connexion\n    const login = useCallback(async (credentials) => {\n        try {\n            console.log('Tentative de connexion avec les identifiants :', credentials);\n            \n            const response = await axios.post('/login', {\n                email: credentials.email,\n                password: credentials.password,\n                device_name: 'browser'\n            });\n            \n            console.log('Réponse du serveur:', response.data);\n            \n            if (response.data && response.data.token && response.data.user) {\n                const { token, user } = response.data;\n                \n                // Stocker le token et les données utilisateur\n                localStorage.setItem('token', token);\n                localStorage.setItem('user', JSON.stringify(user));\n                \n                // Configurer l'en-tête d'authentification par défaut\n                axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n                \n                // Mettre à jour l'état utilisateur\n                setUser(user);\n                \n                // Afficher le message de succès\n                toast.success('Connexion réussie !');\n                \n                return { success: true, user };\n            } else {\n                throw new Error('Réponse du serveur invalide');\n            }\n        } catch (error) {\n            console.error('Erreur de connexion:', error);\n            throw error;\n        }\n    }, []);\n\n    // Fonction de déconnexion\n    const logout = useCallback(() => {\n        // Supprimer les données d'authentification\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        delete axios.defaults.headers.common['Authorization'];\n        \n        setUser(null);\n        toast.info('Vous avez été déconnecté avec succès');\n        \n        // Rediriger vers la page de connexion\n        history.push('/login');\n    }, [history]);\n\n    // Fonction d'inscription\n    const register = useCallback(async (userData) => {\n        try {\n            const response = await axios.post('/register', {\n                ...userData,\n                password_confirmation: userData.password\n            });\n            \n            toast.success('Inscription réussie ! Veuillez vous connecter.');\n            return { success: true };\n        } catch (error) {\n            console.error('Erreur lors de l\\'inscription:', error);\n            throw error;\n        }\n    }, []);\n\n    // Vérifier si l'utilisateur est authentifié\n    const isAuthenticated = !!user;\n\n    return (\n        <AuthContext.Provider \n            value={{ \n                user, \n                loading, \n                isAuthenticated,\n                login, \n                logout, \n                register \n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}