{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  // Change this to your backend API URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// User authentication\nexport const registerUser = async userData => {\n  return await apiClient.post('/register', userData);\n};\nexport const loginUser = async credentials => {\n  return await apiClient.post('/login', credentials);\n};\nexport const logoutUser = async () => {\n  return await apiClient.post('/logout');\n};\n\n// Task management\nexport const fetchTasks = async () => {\n  return await apiClient.get('/tasks');\n};\nexport const createTask = async taskData => {\n  return await apiClient.post('/tasks', taskData);\n};\nexport const updateTask = async (taskId, taskData) => {\n  return await apiClient.put(`/tasks/${taskId}`, taskData);\n};\nexport const deleteTask = async taskId => {\n  return await apiClient.delete(`/tasks/${taskId}`);\n};\nexport const markTaskAsCompleted = async taskId => {\n  return await apiClient.patch(`/tasks/${taskId}/complete`);\n};\nexport const api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api'\n});\n\n// Additional functions for filtering tasks can be added here","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","registerUser","userData","post","loginUser","credentials","logoutUser","fetchTasks","get","createTask","taskData","updateTask","taskId","put","deleteTask","delete","markTaskAsCompleted","patch","api"],"sources":["C:/MAMP/htdocs/task-manager-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiClient = axios.create({\n    baseURL: 'http://localhost:8000/api', // Change this to your backend API URL\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// User authentication\nexport const registerUser = async (userData) => {\n    return await apiClient.post('/register', userData);\n};\n\nexport const loginUser = async (credentials) => {\n    return await apiClient.post('/login', credentials);\n};\n\nexport const logoutUser = async () => {\n    return await apiClient.post('/logout');\n};\n\n// Task management\nexport const fetchTasks = async () => {\n    return await apiClient.get('/tasks');\n};\n\nexport const createTask = async (taskData) => {\n    return await apiClient.post('/tasks', taskData);\n};\n\nexport const updateTask = async (taskId, taskData) => {\n    return await apiClient.put(`/tasks/${taskId}`, taskData);\n};\n\nexport const deleteTask = async (taskId) => {\n    return await apiClient.delete(`/tasks/${taskId}`);\n};\n\nexport const markTaskAsCompleted = async (taskId) => {\n    return await apiClient.patch(`/tasks/${taskId}/complete`);\n};\n\nexport const api = axios.create({\n    baseURL: 'http://127.0.0.1:8000/api',\n});\n\n// Additional functions for filtering tasks can be added here\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,OAAO,MAAML,SAAS,CAACM,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;AACtD,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,OAAO,MAAMR,SAAS,CAACM,IAAI,CAAC,QAAQ,EAAEE,WAAW,CAAC;AACtD,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAO,MAAMT,SAAS,CAACM,IAAI,CAAC,SAAS,CAAC;AAC1C,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAO,MAAMV,SAAS,CAACW,GAAG,CAAC,QAAQ,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,OAAO,MAAMb,SAAS,CAACM,IAAI,CAAC,QAAQ,EAAEO,QAAQ,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEF,QAAQ,KAAK;EAClD,OAAO,MAAMb,SAAS,CAACgB,GAAG,CAAC,UAAUD,MAAM,EAAE,EAAEF,QAAQ,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOF,MAAM,IAAK;EACxC,OAAO,MAAMf,SAAS,CAACkB,MAAM,CAAC,UAAUH,MAAM,EAAE,CAAC;AACrD,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAG,MAAOJ,MAAM,IAAK;EACjD,OAAO,MAAMf,SAAS,CAACoB,KAAK,CAAC,UAAUL,MAAM,WAAW,CAAC;AAC7D,CAAC;AAED,OAAO,MAAMM,GAAG,GAAGtB,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module"}