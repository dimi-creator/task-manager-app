{"ast":null,"code":"var _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\task-manager-app\\\\frontend\\\\src\\\\components\\\\Auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useAuth } from '../../hooks/useAuth';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const {\n    login,\n    isAuthenticated\n  } = useAuth();\n\n  // Rediriger si l'utilisateur est déjà connecté\n  useEffect(() => {\n    if (isAuthenticated) {\n      var _history$location$sta, _history$location$sta2;\n      // Vérifier si l'utilisateur a été redirigé depuis une autre page\n      const from = ((_history$location$sta = history.location.state) === null || _history$location$sta === void 0 ? void 0 : (_history$location$sta2 = _history$location$sta.from) === null || _history$location$sta2 === void 0 ? void 0 : _history$location$sta2.pathname) || '/tasks';\n      history.push(from);\n    }\n  }, [isAuthenticated, history]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.error('Veuillez remplir tous les champs');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      await login({\n        email,\n        password\n      });\n      // La redirection est gérée par le contexte d'authentification\n      // via l'effet qui surveille isAuthenticated\n    } catch (error) {\n      let errorMessage = 'Email ou mot de passe incorrect.';\n      if (error.response) {\n        // Erreur du serveur avec un statut de réponse\n        if (error.response.status === 422 && error.response.data.errors) {\n          const firstError = Object.values(error.response.data.errors)[0];\n          errorMessage = Array.isArray(firstError) ? firstError[0] : 'Données invalides';\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.status === 500) {\n          errorMessage = 'Erreur serveur. Veuillez réessayer plus tard.';\n        }\n      } else if (error.request) {\n        // La requête a été faite mais aucune réponse n'a été reçue\n        errorMessage = 'Le serveur ne répond pas. Vérifiez votre connexion internet.';\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      console.error('Erreur de connexion:', {\n        error\n      });\n      toast.error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"votre@email.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgot-password\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forgot-password\",\n              children: \"Mot de passe oubli\\xE9 ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: isLoading ? 'Connexion en cours...' : 'Se connecter'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-link\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Vous n'avez pas de compte ?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/register\",\n                children: \"S'inscrire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"sZ8a/cOpBhIq6ZQb/yIwy6YVk1w=\", false, function () {\n  return [useHistory, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","toast","useAuth","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","isLoading","setIsLoading","history","login","isAuthenticated","_history$location$sta","_history$location$sta2","from","location","state","pathname","push","handleSubmit","e","preventDefault","error","errorMessage","response","status","data","errors","firstError","Object","values","Array","isArray","message","request","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/MAMP/htdocs/task-manager-app/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useAuth } from '../../hooks/useAuth';\nimport './Login.css';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const history = useHistory();\n    const { login, isAuthenticated } = useAuth();\n\n    // Rediriger si l'utilisateur est déjà connecté\n    useEffect(() => {\n        if (isAuthenticated) {\n            // Vérifier si l'utilisateur a été redirigé depuis une autre page\n            const from = history.location.state?.from?.pathname || '/tasks';\n            history.push(from);\n        }\n    }, [isAuthenticated, history]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        if (!email || !password) {\n            toast.error('Veuillez remplir tous les champs');\n            return;\n        }\n        \n        setIsLoading(true);\n        \n        try {\n            await login({ email, password });\n            // La redirection est gérée par le contexte d'authentification\n            // via l'effet qui surveille isAuthenticated\n        } catch (error) {\n            let errorMessage = 'Email ou mot de passe incorrect.';\n            \n            if (error.response) {\n                // Erreur du serveur avec un statut de réponse\n                if (error.response.status === 422 && error.response.data.errors) {\n                    const firstError = Object.values(error.response.data.errors)[0];\n                    errorMessage = Array.isArray(firstError) ? firstError[0] : 'Données invalides';\n                } else if (error.response.data.message) {\n                    errorMessage = error.response.data.message;\n                } else if (error.response.status === 500) {\n                    errorMessage = 'Erreur serveur. Veuillez réessayer plus tard.';\n                }\n            } else if (error.request) {\n                // La requête a été faite mais aucune réponse n'a été reçue\n                errorMessage = 'Le serveur ne répond pas. Vérifiez votre connexion internet.';\n            } else if (error.message) {\n                errorMessage = error.message;\n            }\n            \n            console.error('Erreur de connexion:', { error });\n            toast.error(errorMessage);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-page\">\n            <div className=\"login-form\">\n                <h2>Connexion</h2>\n                \n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"votre@email.com\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Mot de passe</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"••••••••\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                        />\n                    </div>\n                    \n                    <div className=\"form-actions\">\n                        <div className=\"forgot-password\">\n                            <a href=\"/forgot-password\">Mot de passe oublié ?</a>\n                        </div>\n                        \n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            {isLoading ? 'Connexion en cours...' : 'Se connecter'}\n                        </button>\n                        \n                        <div className=\"register-link\">\n                            <p>Vous n'avez pas de compte ?{' '}\n                                <a href=\"/register\">S'inscrire</a>\n                            </p>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}